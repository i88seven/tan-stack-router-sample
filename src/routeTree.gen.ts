/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AuthImport } from './routes/_auth'
import { Route as AuthHomeImport } from './routes/_auth/home'
import { Route as AuthAboutIndexImport } from './routes/_auth/about/index'
import { Route as AuthAboutAboutIdImport } from './routes/_auth/about/$aboutId'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AuthHomeRoute = AuthHomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => AuthRoute,
} as any)

const AuthAboutIndexRoute = AuthAboutIndexImport.update({
  id: '/about/',
  path: '/about/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthAboutAboutIdRoute = AuthAboutAboutIdImport.update({
  id: '/about/$aboutId',
  path: '/about/$aboutId',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_auth/home': {
      id: '/_auth/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof AuthHomeImport
      parentRoute: typeof AuthImport
    }
    '/_auth/about/$aboutId': {
      id: '/_auth/about/$aboutId'
      path: '/about/$aboutId'
      fullPath: '/about/$aboutId'
      preLoaderRoute: typeof AuthAboutAboutIdImport
      parentRoute: typeof AuthImport
    }
    '/_auth/about/': {
      id: '/_auth/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AuthAboutIndexImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthHomeRoute: typeof AuthHomeRoute
  AuthAboutAboutIdRoute: typeof AuthAboutAboutIdRoute
  AuthAboutIndexRoute: typeof AuthAboutIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthHomeRoute: AuthHomeRoute,
  AuthAboutAboutIdRoute: AuthAboutAboutIdRoute,
  AuthAboutIndexRoute: AuthAboutIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/home': typeof AuthHomeRoute
  '/about/$aboutId': typeof AuthAboutAboutIdRoute
  '/about': typeof AuthAboutIndexRoute
}

export interface FileRoutesByTo {
  '': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/home': typeof AuthHomeRoute
  '/about/$aboutId': typeof AuthAboutAboutIdRoute
  '/about': typeof AuthAboutIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/_auth/home': typeof AuthHomeRoute
  '/_auth/about/$aboutId': typeof AuthAboutAboutIdRoute
  '/_auth/about/': typeof AuthAboutIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/login' | '/home' | '/about/$aboutId' | '/about'
  fileRoutesByTo: FileRoutesByTo
  to: '' | '/login' | '/home' | '/about/$aboutId' | '/about'
  id:
    | '__root__'
    | '/_auth'
    | '/login'
    | '/_auth/home'
    | '/_auth/about/$aboutId'
    | '/_auth/about/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  LoginRoute: typeof LoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  LoginRoute: LoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/login"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/home",
        "/_auth/about/$aboutId",
        "/_auth/about/"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_auth/home": {
      "filePath": "_auth/home.tsx",
      "parent": "/_auth"
    },
    "/_auth/about/$aboutId": {
      "filePath": "_auth/about/$aboutId.tsx",
      "parent": "/_auth"
    },
    "/_auth/about/": {
      "filePath": "_auth/about/index.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
